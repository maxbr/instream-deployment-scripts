application:
  configuration:
    configuration.name: '/new-zookeeper'
    configuration.ports: [31281, 31288, 31388]
  interfaces:
    configuration:
      "*": bind(application#configuration.*)
    zookeeper:
      "*": bind(application#zookeeper.*)
    compute:
      "*": bind(application#compute.*)
    control:
      "*": bind(application#control.*)
  components:
    application:
      type: scripted.Component
      configuration:
        factory.name: Zookeeper on marathon Factory
        factory.launchScript:           /zookeeper/create.py
        factory.destroyScript:          /zookeeper/destroy.py
        factory.healthCheckScript:      /zookeeper/healthCheck.py
        factory.reconfigurationScript:  /zookeeper/reconfigure.py
        factory.commandScripts:
          control.restart:              /zookeeper/restart.py
          control.scale:                /zookeeper/scale.py
      interfaces:
        configuration:
          name:
            type: configuration(string)
            name: Application name
          ports:
            type: configuration(list<int>)
            name: Ports
        zookeeper:
          zookeeper-hosts:
            type: publish-signal(list<string>)
            name: Hosts
          zookeeper-ports:
            type: publish-signal(list<string>)
            name: Ports
        compute:
          ram:
            type: publish-signal(string)
            name: RAM
          cpu:
            type: publish-signal(string)
            name: CPU
          disk:
            type: publish-signal(string)
            name: Disk
        control:
          restart:
            type: receive-command()
            name: Restart
          scale:
            type: receive-command(int instances)
            name: Scale
            arguments:
              instances:
                name: Instances
                default: 3
