application:
  configuration:
    configuration.name: '/new-spark'
  interfaces:
    configuration:
      "*": bind(application#configuration.*)
    spark:
      "*": bind(application#spark.*)
    compute:
      "*": bind(application#compute.*)
    control:
      "*": bind(application#control.*)
  components:
    application:
      type: scripted.Component
      configuration:
        factory.name: Spark on marathon Factory
        factory.launchScript:           /spark/create.py
        factory.destroyScript:          /spark/destroy.py
        factory.healthCheckScript:      /spark/healthCheck.py
        factory.reconfigurationScript:  /spark/reconfigure.py
        factory.commandScripts:
          control.restart:              /spark/restart.py
          control.scale:                /spark/scale.py
      interfaces:
        configuration:
          name:
            type: configuration(string)
            name: Application name
          kafka-host:
            type: configuration(string)
            name: Kafka broker host
          kafka-port:
            type: configuration(int)
            name: Kafka broker port
          cassandra-host:
            type: configuration(string)
            name: Cassandra host
          cassandra-port:
            type: configuration(int)
            name: Cassandra port
          redis-host:
            type: configuration(string)
            name: Redis host
          redis-port:
            type: configuration(int)
            name: Redis port
        spark:
          hosts:
            type: publish-signal(list<string>)
            name: Hosts
          load-balancer-port:
            type: publish-signal(string)
            name: LB port
        compute:
          ram:
            type: publish-signal(string)
            name: RAM
          cpu:
            type: publish-signal(string)
            name: CPU
          disk:
            type: publish-signal(string)
            name: Disk
          instances:
            type: publish-signal(string)
            name: Instances
        control:
          restart:
            type: receive-command()
            name: Restart
          scale:
            type: receive-command(int instances)
            name: Scale application
            arguments:
              instances:
                name: Instances
                default: 1
