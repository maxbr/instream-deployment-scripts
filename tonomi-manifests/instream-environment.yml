application:
    interfaces:
        configuration:
            "*": bind(application#configuration.*)
        redis:
            "*": bind(application#redis.*)
        zookeeper:
            "*": bind(application#zookeeper.*)
        kafka:
            "*": bind(application#kafka.*)
        cassandra:
            "*": bind(application#cassandra.*)
        spark:
            "*": bind(application#spark.*)
        application-entrypoint:
            "*": bind(application#application-entrypoint.*)
        web-ui:
            "*": bind(application#web-ui.*)
        control:
            "*": bind(application#control.*)
    components:
        application:
            type: scripted.Component
            configuration:
                factory.name: In-stream environment on marathon Factory
                factory.launchScript: /isp-environment/create.py
                factory.destroyScript: /isp-environment/destroy.py
                factory.healthCheckScript: /isp-environment/healthCheck.py
                factory.reconfigurationScript: /isp-environment/reconfigure.py
                factory.commandScripts:
                    control.restart: /isp-environment/restart.py
                    control.scale: /isp-environment/scale.py
            interfaces:
                configuration:

                    #imageId: configuration(string)
                    #portMappings: configuration(list<map<string, string>>)
                    #cmd: configuration(string)
                    name: configuration(string)
                redis:
                    lbPort: publish-signal(string)
                    instanceEndpoints: publish-signal(string)
                    instanceEndpointLB: publish-signal(string)
                zookeeper:
                    lbPort: publish-signal(string)
                    ensembleUrl: publish-signal(string)
                    ensembleUrlLB: publish-signal(string)
                    #localPorts: publish-signal(list(string))
                kafka:
                    lbPort: publish-signal(string)
                    endpoints: publish-signal(string)
                    endpointLB: publish-signal(string)
                cassandra:
                    lbPort: publish-signal(string)
                    endpoints: publish-signal(string)
                    endpointLB: publish-signal(string)
                spark:
                    sparkManagers: publish-signal(string)
                    sparkManagerLB: publish-signal(string)
                web-ui:
                    endpoints: publish-signal(list<string>)
                    URL: publish-signal(string)
                application-entrypoint:
                    URL: publish-signal(string)


                control:
                    restart: receive-command()
                    scale: receive-command(int instances)